<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="Chimera.Authentication.Shared.Configuration" type="Chimera.Authentication.Shared.Configuration, Chimera.Authentication.Shared" />
    <section name="Xyperico.Web.Mvc.Configuration" type="Xyperico.Web.Mvc.Configuration, Xyperico.Web.Mvc" />
    <section name="Xyperico.Authentication.Web.Configuration" type="Xyperico.Authentication.Web.Configuration, Xyperico.Authentication.Web" />
    <section name="MongoDBSettings" type="Xyperico.Base.MongoDB.ConfigurationSettings, Xyperico.Base.MongoDB" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!--<sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>-->
  </configSections>

  <Chimera.Authentication.Shared.Configuration
    PasswordHashAlgorithm="SHA1">
    <UserNamePolicy InvalidUserNameFile="invalid-user-names-test.txt" MinLength="1" MaxLength="20"/>
  </Chimera.Authentication.Shared.Configuration>

  <Xyperico.Web.Mvc.Configuration Theme="Mother_Earth" />
  <Xyperico.Authentication.Web.Configuration>
    <LoginSuccessUrl Action="" Controller="" Area="" />
    <RegisterSuccessUrl Action="" Controller="" Area="" />
  </Xyperico.Authentication.Web.Configuration>
  <MongoDBSettings>
    <ConfigurationEntries>
      <add Database="ChimeraAuthentication" Server="localhost" Port="27017" Name="Chimera.Authentication.Views" />
    </ConfigurationEntries>
  </MongoDBSettings>
  
  <log4net configSource="Log4Net.config" />
  
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="RouteDebugger:Enabled" value="true" />
  </appSettings>
  
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <authentication mode="Forms">
      <forms loginUrl="~/app/account" timeout="2880" />
    </authentication>
    <!-- See http://msdn.microsoft.com/library/6e9y4s5t.aspx -->
    <!--<membership defaultProvider="XypericoMembershipProvider" userIsOnlineTimeWindow="15">
      <providers>
        <clear />
        <add name="XypericoMembershipProvider" type="Xyperico.Authentication.Web.SimpleMembershipProvider, Xyperico.Authentication.Web" />
      </providers>
    </membership>-->
    <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8" culture="da-DK" uiCulture="da-DK" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <!-- Make plugin system work -->
      <probing privatePath="bin\Areas" />
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="MongoDB.Bson" publicKeyToken="f686731cfb9cc103" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.7.0.4714" newVersion="1.7.0.4714" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="MongoDB.Driver" publicKeyToken="f686731cfb9cc103" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.7.0.4714" newVersion="1.7.0.4714" />
      </dependentAssembly>
    </assemblyBinding>
    <legacyHMACWarning enabled="0" />
  </runtime>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <!--<dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          --><!-- Uncomment to enable communication with localhost (should generally not activate in production!) --><!--
          --><!--<add name="localhost" />--><!--
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    --><!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. --><!--
    <reporting enabled="true" />
    <openid>
      <relyingParty>
        <security requireSsl="false">
          --><!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. --><!--
          --><!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>--><!--
        </security>
        <behaviors>
          --><!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). --><!--
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>-->
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>